                                                      JSON

1. Создать внешний репозиторий c названием JSON - Create a new repozitory JSON

2. Клонировать репозиторий JSON на локальный компьютер -  git clone git@github.com:lina263022/JSON.gitt (SSh code)

3. Внутри локального JSON создать файл “new.json”-  cd JSON  
                                                     touch new.json
 
4. Добавить файл под гит - git add new.json

5. Закоммитить файл - git commit -m "add the first file"

6. Отправить файл на внешний GitHub репозиторий - git push
 
7. Отредактировать содержание файла “new.json” - написать информацию о себе - vim new.json

(ФИО, возраст, количество домашних животных, будущая желаемая зарплата) 
Всё написать в формате JSON 

8. Отправить изменения на внешний репозиторий - git add new.json
                                                  git commit -m "changing  a file"
                                                  git push


9. Создать файл preference-s.json - touch preference-s.json


10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON - vim preference-s.json

11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - nano sklls.json

12. Отправить сразу 2 файла на внешний репозиторий - git add .
                                                      git commit -m "add 2 files"
                                                      git push

 13. На веб интерфейсе создать файл bug_report.json - Add file-Create new file

 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе- Commit new file

 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON - Edit this file 

 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе- кнопка Commit changes

 17. Синхронизировать внешний и локальный репозиторий JSON - git fetch
                                                             git pull

                                                         

                                                               
                                                           TXT

 1.Создать внешний репозиторий c названием TXT- Create a new repozitory TXT

 2. Клонировать репозиторий TXT на локальный компьютер - git clone git@github.com:lina263022/JSON.gitt (SSh code)

 3. Внутри локального TXT создать файл “new.txt” - cd TXT
                                                   touch new.json

 4. Добавить файл под гит - git add new.json

 5. Закоммитить файл - git commit -m "add the first file"

 6. Отправить файл на внешний GitHub репозиторий - git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных,

 будущая желаемая зарплата). Всё написать в формате TXT -      vim new.txt 

 8. Отправить изменения на внешний репозиторий - git add new.txt
                                                 git commit -m "add changing file"
                                                 git push

 9. Создать файл preferences.txt  - touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы

 посетить) в формате TXT - vim preferences.txt

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT - nano sklls.txt

 12. Сделать коммит в одну строку - git commit -am "add file"

 13. Отправить сразу 2 файла на внешний репозиторий - git push 

 14. На веб интерфейсе создать файл bug_report.txt - Add file-Create new file

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Commit new file

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT -Edit this file

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе - кнопка Commit changes

 18. Синхронизировать внешний и локальный репозиторий TXT - git fetch
                                                            git pull


                                                           XML

 1.Создать внешний репозиторий c названием XML - Create a new repozitory XML

 2. Клонировать репозиторий XML на локальный компьютер - git clone git@github.com:lina263022/JSON.gitt (SSh code)

 3. Внутри локального XML создать файл “new.xml” - cd TXT
                                                   touch new.xml
 4. Добавить файл под гит - git add new.xml

 5. Закоммитить файл  - git commit -m "add the first file"
 
 6. Отправить файл на внешний GitHub репозиторий - git push

 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML - 
                                                      vim new.xml


 8. Отправить изменения на внешний репозиторий - git add new.xml
                                                 git commit -m "add changing file"
                                                 git push

 9. Создать файл preferences.xml - touch preferences.xml


 10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы 

посетить) в формате XML - vim preferences.xml

 11. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - nano skills.xml


 12. Сделать коммит в одну строку - git commit -am "add file"

 13. Отправить сразу 2 файла на внешний репозиторий - git push

 14. На веб интерфейсе создать файл bug_report.xml - Add file-Create new file bug_report.xml

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе -  Commit new file

 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML - Edit this file

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе - кнопка Commit changes

 18. Синхронизировать внешний и локальный репозиторий - git fetch
                                                        git pull




